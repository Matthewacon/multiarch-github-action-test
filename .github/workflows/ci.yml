name: CI
on: ["push"]
jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up docker buildx context
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and save
        uses: docker/build-push-action@v5
        with:
          file: ./.github/actions/dind-multiarch/dind-arch.Dockerfile
          tags: matthewacon/test-repoitory-dind-arch:${{ github.run_number }}
          outputs: type=docker,dest=dind-arch.tar
          #cache-from: type=registry,ref=matthewacon/test-repoitory-dind-arch:${{ github.run_number }}
          #cache-to: type=registry,ref=matthewacon/test-repoitory-dind-arch:${{ github.run_number }}
      - name: Push to dockerhub
        uses: docker/build-and-push-action@v5
        with:
          push: true
          tags: matthewacon/test-repoitory-dind-arch:${{ github.run_number }}
          cache-from: type=local,src=dind-arch.tar
          outputs: type=registry,type=registry,ref=matthewacon/test-repoitory-dind-arch:${{ github.run_number }}
      - name: Upload action artifact
        uses: actions/upload-artifact@v4
        with:
          name: dind-arch
          path: dind-arch.tar
  build-and-run-multiarch-docker-image:
    runs-on: ubuntu-latest
    needs: ["build-image"]
    #TODO:
    # - checkout repo
    # - build image
    # - start image
    services:
      image: ./.github/actions/dind-multiarch/dind-arch.Dockerfile
    steps:
      - name: Try to contact DIND daemon
        run: |
          find /var/run

##on:
##  workflow_run: ["CI"]
##  types:
##    - in_progress
#jobs:
#  build-multiarch-docker-image:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Build base arch image
#        run: |
#          cd $GITHUB_WORKSPACE
#          docker build . -f .github/actions/dind-multiarch/dind-arch.Dockerfile -t docker-multiarch:${{ github.run_number }}
#          docker save docker-multiarch:${{ github.run_number }} > docker-multiarch.tar
#      - uses: actions/upload-artifact@v4
#        with:
#          name: docker-multiarch-image
#          path: docker-multiarch.tar
#  run-example:
#    runs-on: ubuntu-latest
#    needs: build-multiarch-docker-image
#    services:
#      dockerd:
#        image: docker-multiarch:${{ github.run_number }}
#        #env:
#        #  args: |
#        #    /usr/bin/busybox sh -c "\
#        #    wget TODO.tar \
#        #    && dockerd -D --init unix:///var/run/docker2/docker.sock --exec-root /var/run/docker2 --cri-containerd \
#        #    "
#        volumes:
#          - /var/run/docker2:/var/run/docker2
#    steps:
#      - name: Do nothing
#        run: find /var/run/docker2 && sleep 100


  #build_and_push_to_local_registry:
  #  runs-on: ubuntu-latest
  #  services:
  #    docker_registry:
  #      image: registry:2
  #      ports:
  #      - 5000:5000
  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: Build image
  #      run: |
  #        cd $GITHUB_WORKSPACE
  #        docker build . -f .github/actions/dind-multiarch/dind-arch.Dockerfile -t archlinux:builder
  #        docker tag archlinux:builder localhost:5000/archlinux:builder
  #        docker push localhost:5000/archlinux:builder
  #        docker run --privileged -v /var/run/docker.sock:/var/run/docker.sock archlinux:builder

  #      #❯ docker build . -f .github/actions/dind-multiarch/dind-arch.Dockerfile -t archlinux:builder
  #      #❯ docker run --privileged -v /run/docker.sock:/var/run/docker.sock -v "$PWD/out:/out" -e TERM=xterm -it archlinux:builder

  #    - name:

  #OLD:
  #testing:
  #another_test_job:
  #  runs-on: ubuntu-latest
  #  container: ../actions/dind-multiarch/dind-arch.Dockerfile
  #  services:
  #    dind_service:
  #      - name: Example step
  #        run: |
  #          env
  #          uname -a
  #          uname -r
  #          echo $SHELL

  ##testing: build use action
  #test_job:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v1
  #    - uses: ./.github/actions/dind-multiarch
  #    - name: Print env
  #      run: |
  #        env
  #        uname -a
  #        uname -r
  #        echo $SHELL
  #        find /usr/bin

  #testing: build image with buildx
  #build_image:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Set up docker buildx context
  #      uses: docker/setup-buildx-action@v3
  #    - name: Build and push
  #      uses: docker/build-push-action@v3
  #      with:
  #        push: false
  #        file: ./.github/actions/dind-multiarch/dind-arch.Dockerfile
  #        tags: dind-arch:${{ github.run_number }}
  #        outputs: type=docker,dest=./dind-arch.tar
  #        cache-from: type=registry,ref=dind-arch:${{ github.run_number }}
  #        cache-to: type=registry,ref=dind-arch:${{ github.run_number }}

